--write the query that draws the number of films of serial films such as harry potter, james bond, how many films they consist of, how much budget they were shot in total and how much revenue they made as shown in the figure.

SELECT C.NAME_ AS SERI_ADI,COUNT(M.FILMID) AS FILM_SAYISI,
SUM(M.BUDGET) AS TOPLAM_BUTCE,
ROUND(AVG(M.BUDGET),2) AS ORTALAMA_BUTCE,
SUM(M.REVENUE) AS TOPLAM_HASILAT,
ROUND(AVG(M.REVENUE),2) AS ORTALAMA_HASILAT

FROM MOVIE M 
INNER JOIN COLLECTION_ C ON C.COLLECTIONID=M.COLLECTIONID
GROUP BY C.NAME_
ORDER BY 6 DESC

--Write the query that brings the highest budget, lowest budget, highest grossing, lowest grossing films of serial films such as harry potter, james bond.

SELECT 
C.NAME_ AS SERI_ADI,
(SELECT COUNT(*) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID) AS FILM_SAYISI,
(SELECT SUM(BUDGET) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID) AS TOPLAM_BUTÃ‡E,
(SELECT SUM(REVENUE) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID) AS TOPLAM_HASILAT,
(SELECT TOP 1 STR(YEAR(RELEASE_DATE))+'-'+ TITLE +','+STR(BUDGET) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID ORDER BY BUDGET DESC) AS ENCOK_BUTCELI_FILM,
(SELECT TOP 1 STR(YEAR(RELEASE_DATE))+'-'+ TITLE +','+STR(BUDGET) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID ORDER BY BUDGET) AS ENAZ_BUTCELI_FILM,
(SELECT TOP 1 STR(YEAR(RELEASE_DATE))+'-'+ TITLE +','+STR(REVENUE) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID ORDER BY REVENUE DESC) AS ENCOK_HASILATYAPAN_FILM,
(SELECT TOP 1 STR(YEAR(RELEASE_DATE))+'-'+ TITLE +','+STR(REVENUE) FROM MOVIE WHERE COLLECTIONID=C.COLLECTIONID ORDER BY REVENUE) AS ENAZ_HASILATYAPAN_FILM
FROM COLLECTION_ C
ORDER BY 3 DESC

--write the query that returns the information about how many films the person named quentin tarantino has worked in which task until this time.

SELECT P.NAME_ KISI,D.DEPARTMENT BOLUM,J.JOB GOREV,
COUNT(M.FILMID) FILMSAYISI
FROM PERSON P

INNER JOIN CREW_CREDIT CC ON CC.PERSONID=P.PERSONID
INNER JOIN DEPARTMENT D ON D.ID=CC.DEPARTMENTID
INNER JOIN JOB J ON J.ID=CC.JOBID
INNER JOIN MOVIE M ON M.FILMID=CC.FILMID
WHERE P.NAME_ LIKE 'Quentin Tarantino'
GROUP BY P.NAME_,D.DEPARTMENT,J.JOB
ORDER BY D.DEPARTMENT,J.JOB

--write the query that returns the information about which country produced how much film.


SELECT MC.COUNTRYCODE ULKEKODU,
C.COUNTRY ULKEADI,
COUNT(M.FILMID) FILMSAYISI 
FROM MOVIE_COUNTRY MC
INNER JOIN COUNTRY C ON C.CODE=MC.COUNTRYCODE
INNER JOIN MOVIE M ON M.FILMID=MC.FILMID
GROUP BY MC.COUNTRYCODE,C.COUNTRY
ORDER BY 3 DESC

--write a query that lists films co-produced by American and Japanese companies.

SELECT M.FILMID,MC.COUNTRYCODE AS ULKEKODU,C.COUNTRY AS ULKEADI,
M.TITLE,M.ORIGINAL_TITLE
FROM MOVIE_COUNTRY MC
INNER JOIN MOVIE M ON M.FILMID=MC.FILMID
INNER JOIN COUNTRY C ON C.CODE=MC.COUNTRYCODE
WHERE C.CODE='US'
AND M.FILMID IN (SELECT FILMID FROM MOVIE_COUNTRY WHERE COUNTRYCODE='JP')

--write the query that brings the 5 most popular films of each film category as shown in the figure.

SELECT GN.GENRE KATEGORI,CONVERT(VARCHAR,MV.ROWNNR)+'.'+
MV.TITLE FILMADI,MV.POPULARITY POPULARITE 
FROM GENRE GN
CROSS APPLY
(
SELECT TOP 5
ROW_NUMBER() OVER (ORDER BY POPULARITY DESC) AS ROWNNR,
M.TITLE,M.FILMID,M.POPULARITY,G.GENREID,G.GENRE FROM MOVIE_GENRE MG
INNER JOIN GENRE G ON G.GENREID=MG.GENREID
INNER JOIN MOVIE M ON M.FILMID=MG.FILMID
WHERE G.GENREID=GN.GENREID
ORDER BY M.POPULARITY DESC
) MV