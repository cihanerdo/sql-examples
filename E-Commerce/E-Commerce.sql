--Write the query that retrieves the information about how much sales were made in which city on the salesorders table.

SELECT CITY,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS

GROUP BY CITY

ORDER BY CITY

--Write the query that retrieves the information about how much sales were made in which month according to the saleorders table cities.

SELECT CITY,MONTH_,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS
GROUP BY CITY,MONTH_
ORDER BY CITY,MONTH_

--we want to find out on which day of the week each city sells the most and make a special campaign for the city and days accordingly. please write the query that brings the information about how much sales the cities make according to the days of the week as shown in the figure.

SELECT CITY,DAYOFWEEK_,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS
GROUP BY CITY,DAYOFWEEK_
ORDER BY 1 , 2

--we want to find out on which day of the week each city sells the most and make a special campaign for the city and days accordingly. please write the query that brings the information about how much sales the cities make according to the days of the week as shown in the figure.

SELECT 
DISTINCT CITY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='01.PZT') AS PAZARTESI,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='02.SAL') AS SALI,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='03.Ã‡AR') AS CARSAMBA,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='04.PER') AS PERSEMBE,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='05.CUM') AS CUMA,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='06.CMR') AS CUMARTESI,
(SELECT SUM(LINETOTAL) FROM SALEORDERS
WHERE CITY=S.CITY AND DAYOFWEEK_='07.PAZ') AS PAZAR
FROM SALEORDERS S
ORDER BY 1

--Write the query that brings the top 5 best selling categories of each province as shown in the figure.

SELECT 
S.CITY,S1.CATEGORY1,S1.TOTALSALE

FROM SALEORDERS S 
CROSS APPLY (SELECT TOP 5  CATEGORY1,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS WHERE CITY=S.CITY GROUP BY CATEGORY1 ORDER BY SUM(LINETOTAL) DESC) S1

GROUP BY S.CITY,S1.CATEGORY1,S1.TOTALSALE

ORDER BY S.CITY,SUM(S1.TOTALSALE) DESC

--write the query that brings the 3 most sold categories in each city and the 3 most sold subcategories under it as shown in the figure.

SELECT 
S.CITY,S1.CATEGORY1,S2.CATEGORY2,S2.TOTALSALE2
FROM SALEORDERS S
CROSS APPLY (SELECT TOP 3 CATEGORY1,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS WHERE CITY=S.CITY GROUP BY CATEGORY1 ORDER BY SUM(LINETOTAL) DESC) S1
CROSS APPLY (SELECT TOP 3 CATEGORY2,SUM(LINETOTAL) AS TOTALSALE2 FROM SALEORDERS WHERE CITY=S.CITY AND CATEGORY1=S1.CATEGORY1 GROUP BY CATEGORY2 ORDER BY SUM(LINETOTAL) DESC) S2

GROUP BY S.CITY,S1.CATEGORY1,S2.CATEGORY2,S2.TOTALSALE2
ORDER BY S.CITY,S1.CATEGORY1,S2.TOTALSALE2 DESC

--Fill the saleorders table by joining the tables with join.

SELECT U.ID,U.USERNAME_,U.NAMESURNAME,
U.TELNR1,U.TELNR2,CO.COUNTRY,C.CITY,
T.TOWN,A.ADDRESSTEXT,OD.ORDERID,
I.ITEMCODE,I.ITEMNAME,I.BRAND,I.CATEGORY1,I.CATEGORY2,I.CATEGORY3,I.CATEGORY4,
OD.AMOUNT,OD.UNITPRICE,OD.LINETOTAL,
CONVERT(DATE,O.DATE_) AS ORDERDATE_,CONVERT(TIME,O.DATE_) AS ORDERTIME,
YEAR(O.DATE_) AS YEAR_ ,DATENAME(MONTH,O.DATE_) AS MONTH_, DATENAME(DW,O.DATE_) AS DAYOFWEEK_

FROM ORDERS O
INNER JOIN USERS U ON U.ID=O.USERID
INNER JOIN ADDRESS A ON A.ID=O.ADDRESSID
INNER JOIN COUNTRIES CO ON CO.ID=A.COUNTRYID
INNER JOIN CITIES C ON C.ID=A.CITYID
INNER JOIN TOWNS T ON T.ID=A.TOWNID
INNER JOIN ORDERDETAILS OD ON OD.ORDERID=A.ID
INNER JOIN ITEMS I ON I.ID=OD.ITEMID
INNER JOIN INVOICES INV ON INV.ID=O.ADDRESSID

--write the query that brings the information about how much sales were made in which city by using relational tables.

--Method 1

SELECT C.CITY,SUM(O.TOTALPRICE) AS TOTALPRICE FROM ORDERS O
INNER JOIN ADDRESS A ON A.ID=O.ADDRESSID
INNER JOIN CITIES C ON C.ID=A.CITYID
GROUP BY C.CITY

--Method 2 Subquery	

SELECT *,
(SELECT SUM(TOTALPRICE) FROM ORDERS WHERE ADDRESSID IN
	(
	SELECT ID FROM ADDRESS WHERE CITYID=C.ID
	)
 )
FROM CITIES C

--write the query that brings the best selling category1 field of each brand according to the main category as shown in the figure.

--Method 1

SELECT I.BRAND,I.CATEGORY1,SUM(OD.LINETOTAL) AS TOTALPRICE FROM ITEMS I
INNER JOIN ORDERDETAILS OD ON OD.ITEMID=I.ID
GROUP BY I.BRAND,I.CATEGORY1
ORDER BY BRAND,TOTALPRICE DESC

--Method 2 Subquery

SELECT BRAND,CATEGORY1,
(SELECT SUM(LINETOTAL) FROM ORDERDETAILS WHERE ITEMID IN
	(SELECT ID FROM ITEMS WHERE BRAND=ITM.BRAND AND CATEGORY1=ITM.CATEGORY1)
) AS TOTALPRICE

FROM ITEMS ITM

GROUP BY BRAND,CATEGORY1
ORDER BY BRAND,TOTALPRICE DESC

--write the query that brings the best selling brand in each category as in the figure.

													
SELECT CATEGORY1,BRAND,SUM(OD.LINETOTAL) AS TOTALPRICE FROM ITEMS I
INNER JOIN ORDERDETAILS OD ON OD.ITEMID=I.ID
GROUP BY CATEGORY1,BRAND
ORDER BY 1 , 3 DESC								

--each product is sold with different prices over time.write the query that brings the information about the minimum, maximum and average price of each product and how many times and how many pieces are sold as shown in the figure.

SELECT I.BRAND,I.CATEGORY1,I.ITEMCODE,I.ITEMNAME,
COUNT(O.ID) AS SALECOUNT,SUM(O.AMOUNT) AS TOTALAMOUNT,
MIN(O.UNITPRICE) AS MINPRICE,MAX(O.UNITPRICE) AS MAXPRICE,AVG(O.UNITPRICE) AS AVGPRICE
FROM ITEMS I
INNER JOIN ORDERDETAILS O ON O.ITEMID=I.ID
GROUP BY I.BRAND,I.CATEGORY1,I.ITEMCODE,I.ITEMNAME
ORDER BY 1,3 DESC

--write the query that brings the number of addresses registered in the system and the last shopping address information of the customers as shown in the figure.

SELECT U.NAMESURNAME,
(SELECT COUNT(*) FROM ADDRESS WHERE USERID=U.ID) AS ADDRESSCOUNT,
(
SELECT ADDRESSTEXT FROM ADDRESS WHERE ID IN 
	(SELECT TOP 1 ADDRESSID FROM ORDERS WHERE USERID=U.ID ORDER BY DATE_ DESC)
) LASTSHOPPINGADDRESS

FROM USERS U

--write the query that brings the number of addresses of the customers registered in the system and the last shopping address information together with the city, district and neighbourhood.

SELECT TMP.NAMESURNAME,TMP.ADDRESSCOUNT,C.CITY,T.TOWN,D.DISTRICT,A.POSTALCODE,A.ADDRESSTEXT FROM 
(
SELECT U.NAMESURNAME,
(SELECT COUNT(*) FROM ADDRESS WHERE USERID=U.ID) AS ADDRESSCOUNT,
(SELECT TOP 1 ADDRESSID FROM ORDERS WHERE USERID=U.ID ORDER BY DATE_ DESC)
 LASTADDRESSID
FROM USERS U 
) TMP

INNER JOIN ADDRESS A ON A.ID=TMP.LASTADDRESSID
INNER JOIN CITIES C ON C.ID=A.CITYID
INNER JOIN TOWNS T ON T.ID=A.TOWNID
INNER JOIN DISTRICTS D ON D.ID=A.DISTRICTID

--write the query that lists the cities that order 500 tl and below daily for at least 10 days in January as shown in the figure.

SELECT CITY,COUNT(*) FROM
(
SELECT C.CITY,CONVERT(DATE,O.DATE_)AS DATE_,
SUM(O.TOTALPRICE) AS TOTALPRICE
FROM ORDERS O
INNER JOIN ADDRESS A ON A.ID=O.ADDRESSID
INNER JOIN CITIES C ON C.ID=A.CITYID
WHERE O.DATE_ BETWEEN '20190101' AND '2019-01-31 23:59:59'
--AND C.CITY='BURSA'
GROUP BY C.CITY,CONVERT(DATE,O.DATE_)
HAVING SUM(O.TOTALPRICE)<500
) TMP 
GROUP BY CITY
HAVING COUNT(CITY)>=10