--Write the query that retrieves customers born between 1990-1995.

SELECT * FROM CUSTOMERS
WHERE BIRTHDATE BETWEEN '19900101' AND '19951231'
ORDER BY BIRTHDATE

--Write the query that brings people living in Istanbul using join

SELECT C.*,CT.CITY FROM CUSTOMERS C 
INNER JOIN CITIES CT ON C.CITYID=CT.ID

WHERE CT.CITY='İSTANBUL'

--Subquery

SELECT 
(SELECT CITY FROM CITIES WHERE ID=C.CITYID),
* FROM CUSTOMERS C
WHERE 
(SELECT CITY FROM CITIES WHERE ID=C.CITYID)='İSTANBUL'

--Write the query that brings the information about how many customers we have in which city.

SELECT CT.CITY,COUNT(C.ID) AS CUSTOMERCOUNT FROM CUSTOMERS C 
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY

--Bring the cities with more than 10 customers in order from more to less according to the number of customers with the number of customers.

SELECT CT.CITY,COUNT(C.ID) AS CUSTOMERCOUNT FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY
HAVING COUNT(C.ID)>10
ORDER BY CUSTOMERCOUNT DESC


--Subquery

SELECT *,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=C.ID)
FROM CITIES C

WHERE 
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=C.ID)>10
ORDER BY 3 DESC

--Type the query that returns the information about how many male and how many female customers we have in which city

SELECT CT.CITY,GENDER,COUNT(C.ID) AS CUSTOMERCOUNT FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
GROUP BY CT.CITY,GENDER
ORDER BY CITY 

--Subquery

SELECT CITY AS SEHIRADI,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=C.ID AND GENDER='E') AS ERKEKSAYISI,
(SELECT COUNT(*) FROM CUSTOMERS WHERE CITYID=C.ID AND GENDER='K') AS KADINSAYISI
FROM CITIES C

--Add a new field for age group to the customers table.


ALTER TABLE CUSTOMERS ADD AGEGROUP VARCHAR(50)

--Update the agegroup field you added to the customers table as 20-35 years old, 36-45 years old, 46-55 years old, 56-65 years old and over 65 years old


UPDATE CUSTOMERS SET AGEGROUP='20-35 YAŞ ARASI'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35
	UPDATE CUSTOMERS SET AGEGROUP='36-45 YAŞ ARASI'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45
	UPDATE CUSTOMERS SET AGEGROUP='46-55 YAŞ ARASI'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55
	UPDATE CUSTOMERS SET AGEGROUP='56-65 YAŞ ARASI'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 56 AND 65
	UPDATE CUSTOMERS SET AGEGROUP='65 YAŞ ÜSTÜ'
WHERE DATEDIFF(YEAR,BIRTHDATE,GETDATE()) > 65

--Write the query that returns the total number of people in the age range in the customers table without using the agegroup field.


SELECT AGEGROUP2,COUNT(TMP.ID) AS CUSTOMERCOUNT FROM
(
SELECT *,
CASE 
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 35 THEN '20-35 YAŞ ARASI' 
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 36 AND 45 THEN '36-45 YAŞ ARASI'
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 46 AND 55 THEN '46-56 YAŞ ARASI'
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 56 AND 65 THEN '56-65 YAŞ ARASI'
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE())> 65 THEN '65 YAŞ ÜSTÜ'
END AGEGROUP2
FROM CUSTOMERS
) TMP
GROUP BY AGEGROUP2
ORDER BY AGEGROUP2

--list those who live in Istanbul but not in Kadiköy.


--1
SELECT * FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
WHERE CT.CITY='İSTANBUL' AND D.DISTRICT<>'KADIKÖY'

--2
SELECT * FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
WHERE CT.CITY='İSTANBUL' AND NOT D.DISTRICT='KADIKÖY'

--3
SELECT * FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
WHERE CT.CITY='İSTANBUL' AND D.DISTRICT NOT LIKE 'KADIKÖY'

--4-
SELECT * FROM CUSTOMERS C
INNER JOIN CITIES CT ON CT.ID=C.CITYID
INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID
WHERE CT.CITY='İSTANBUL' AND D.DISTRICT NOT IN ('KADIKÖY')

--subquery

SELECT * FROM CUSTOMERS
WHERE CITYID IN (SELECT ID FROM CITIES WHERE CITY='İSTANBUL')
AND DISTRICTID NOT IN (SELECT ID FROM DISTRICTS WHERE DISTRICT='KADIKÖY')

--Suppose we delete the "Ankara" record from the cities table. in this case, the city field of customers whose city is "Ankara" will be empty. write the query that lists the customers whose city field is empty.

DELETE FROM CITIES WHERE CITY='ANKARA'

SELECT * FROM CUSTOMERS C
LEFT JOIN CITIES CT ON CT.ID=C.CITYID
WHERE CT.CITY IS NULL

--Insert the ankara records that we deleted from the cities table in the previous question back into the table to get the same ids.

SET IDENTITY_INSERT CITIES ON
INSERT INTO CITIES(ID,CITIES)
VALUES (6,'ANKARA')

--We want to bring the operator information of our customers' phone numbers. we want to bring the operator number (532),(505) next to the telnr1 and telnr2 fields. write the required query.


SELECT CUSTOMERNAME,TELNR1,TELNR2,
SUBSTRING(TELNR1,1,5) AS OPERATOR1,
SUBSTRING(TELNR2,1,5) AS OPERATOR2 
FROM CUSTOMERS

--We want to bring the operator information of our customers' phone numbers. For example, let the phone numbers be "x" operator starting with "50" or "55", "y" operator starting with "54", "z" operator starting with "53". Write the query that will bring the information about which operator has how many customers

SELECT
SUM(TELNR1_XOPERATORCOUNT+TELNR2_XOPERATORCOUNT) AS XOPERATORCOUNT,
SUM(TELNR1_YOPERATORCOUNT+TELNR2_YOPERATORCOUNT) AS YOPERATORCOUNT,
SUM(TELNR1_ZOPERATORCOUNT+TELNR2_ZOPERATORCOUNT) AS ZOPERATORCOUNT
FROM
(

SELECT

CASE
         WHEN TELNR1 LIKE '(50%' OR TELNR1 LIKE '(55%' THEN 1
ELSE 0
END AS TELNR1_XOPERATORCOUNT,
CASE
         WHEN TELNR1 LIKE '(54%'  THEN 1
ELSE 0
END AS TELNR1_YOPERATORCOUNT,
CASE
          WHEN TELNR1 LIKE '(53%' THEN 1
ELSE 0
END AS TELNR1_ZOPERATORCOUNT,
CASE
           WHEN TELNR2 LIKE '(50%' OR TELNR2 LIKE '(55%' THEN 1
ELSE 0
END AS TELNR2_XOPERATORCOUNT,
CASE
          WHEN TELNR2 LIKE '(54%' THEN 1
ELSE 0
END AS TELNR2_YOPERATORCOUNT,
CASE
        WHEN TELNR2 LIKE '(53%' THEN 1
ELSE 0
END AS TELNR2_ZOPERATORCOUNT

 FROM CUSTOMERS
) T

--Write the query required to bring the districts where we have the most customers in each province in order from most to least according to the number of customers


SELECT CT.CITY,D.DISTRICT,COUNT(C.ID) AS CUSTOMERCOUNT

FROM CUSTOMERS C

INNER JOIN CITIES CT ON CT.ID=C.CITYID

INNER JOIN DISTRICTS D ON D.ID=C.DISTRICTID

GROUP BY CT.CITY,D.DISTRICT

ORDER BY CT.CITY,COUNT(C.ID) DESC

--Write the query that brings the birthdays of customers as the day of the week

SET LANGUAGE turkish
SELECT 

CUSTOMERNAME,DATENAME(DW,BIRTHDATE) BIRTHDATE
FROM CUSTOMERS

--Write the query that brings customers whose birthday is today.

SELECT * FROM CUSTOMERS

WHERE MONTH(BIRTHDATE)=MONTH(GETDATE()) 
AND 
DAY(BIRTHDATE)=DAY(GETDATE())